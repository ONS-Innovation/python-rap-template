[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle erros
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "I",   # isort
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "C4",  # flake8-comprehensions
    "S",   # flake8-bandit
    "D",   # pydocstyle - Enforce existing docstrings only
    "C90", # mccabe
    "RUF", # Ruff specific rules
]

ignore = [
    # Conflicts with google docstring style
    "D205",
    # Allow missing docstring, remove to enforce docstrings across the board
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    # indentation contains tabs
    "W191",
    # Too many args in functions
    "PLR0913",
]

unfixable = ["F401", "F841"]

[tool.ruff.lint.isort]
known-first-party = ["joejoe"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    # Allow use of assert statements in tests
    "S101",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[tool.poetry]
name = "joejoe"
version = "0.1.0"
description = "stuff"
authors = ["ONSdigital"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
pandas = "^2.3.1"

[tool.poetry.group.dev.dependencies]
bandit = "^1.8.6"
pytest = "^8.4.1"
pytest-xdist = "^3.8.0"
ruff = "^0.12.7"
pytest-cov = "^6.2.1"
mypy = "^1.9.0"
pre-commit = "^3.6.2"
